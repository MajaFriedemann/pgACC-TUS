###################################
# IMPORT PACKAGES
###################################
import os
import numpy as np
from psychopy import gui, visual, core, data, event, logging, clock
from mpydev import BioPac

###################################
# CONSTANTS AND CONFIGURATION
###################################
EXP_NAME = 'pgACC-TUS-staircase'
DATA_DIR = 'staircase_data'
MAX_TRIALS = 5
WINDOW_SIZE = [1920, 1080]
REWARD_INITIAL = 18
EFFORT_INITIAL = 6
K_ESTIMATE_INITIAL = 0.5

###################################
# UTILITIES
###################################
def create_directory(directory):
    if not os.path.exists(directory):
        os.makedirs(directory)

def save_data(datafile, info, log_vars):
    dataline = ','.join([str(info[v]) for v in log_vars])
    datafile.write(dataline + '\n')
    datafile.flush()

###################################
# SESSION INFORMATION
###################################
def get_experiment_info():
    expInfo = {'participant nr': '',
               'session (x/y/s)': '',
               'session nr': '',
               'age': '',
               'gender (f/m/o)': '',
               'handedness (l/r/b)': ''
               }
    dlg = gui.DlgFromDict(dictionary=expInfo, sortKeys=False, title=EXP_NAME)
    if not dlg.OK:
        core.quit()
    return expInfo

###################################
# SET UP WINDOW
###################################
def setup_window():
    return visual.Window(
        gammaErrorPolicy='ignore',
        size=WINDOW_SIZE,
        fullscr=True,
        screen=0,
        allowGUI=True,
        allowStencil=False,
        monitor='testMonitor',
        color='black',
        blendMode='avg',
        useFBO=True,
        units='pix'
    )

###################################
# MAIN EXPERIMENT FUNCTIONS
###################################
def main():
    # Initialization
    DUMMY = False  # set this to true to use the mouse instead of the hand grippers
    print('Reminder: Press Q to quit.')

    # Session Information
    expInfo = get_experiment_info()

    # Experiment Variables
    mp = BioPac("MP160", n_channels=2, samplerate=200, logfile="test", overwrite=True) if not DUMMY else 1

    # Data Saving Variables
    info = setup_info(expInfo)
    create_directory(DATA_DIR)
    datafile = setup_datafile(info)

    # Window Setup
    win = setup_window()

    # Stimuli Creation
    stimuli = create_stimuli(win, info)

    # Calibration
    info = do_calibration(win, mouse, info, DUMMY, mp, stimuli['calibration_txt'])

    # Trials
    perform_trials(win, mouse, info, DUMMY, mp, stimuli, datafile)

    # Thank You
    display_thank_you(win)

    # Cleanup
    cleanup(win)

# Additional functions like do_calibration, perform_trials, display_thank_you, and cleanup should be implemented here

if __name__ == "__main__":
    main()
